import cv2

def video_to_images(input_video_path, output_folder_path, target_fps):
    # Open the video file
    cap = cv2.VideoCapture(input_video_path)

    # Get video properties
    fps = int(cap.get(cv2.CAP_PROP_FPS))
    frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

    # Create output folder if not exists
    import os
    os.makedirs(output_folder_path, exist_ok=True)

    # Calculate the frame skip interval to achieve the target fps
    frame_skip_interval = int(round(fps / target_fps))

    # Loop through each frame and save it as an image
    frame_number = 0
    while True:
        ret, frame = cap.read()
        if not ret:
            break

        # Save the frame as an image every frame_skip_interval frames
        if frame_number % frame_skip_interval == 0:
            image_filename = f"{output_folder_path}/frame_{frame_number:04d}.png"
            cv2.imwrite(image_filename, frame)

        frame_number += 1

    # Release the video capture object
    cap.release()

    print(f"Video frames saved as images in: {output_folder_path}")

if __name__ == "__main__":
    # Replace 'input_video.mp4' with the path to your video file
    input_video_path = 'Anime Badass Moments TikTok compilation.mpg'

    # Replace 'output_frames' with the path to the folder where you want to save the frames
    output_folder_path = 'output_frames'

    # Set the target frame rate (fps) for the image sequence
    target_fps = 10

    video_to_images(input_video_path, output_folder_path, target_fps)
